// –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –∞–Ω–∞–ª–∏–∑–∞
const testAnalysis = async () => {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –∞–Ω–∞–ª–∏–∑...')
  
  try {
    const response = await fetch('https://uxaudute.vercel.app/api/health')
    const health = await response.json()
    console.log('‚úÖ Health check:', health)
    
    // –¢–µ—Å—Ç –ø—Ä–æ—Å—Ç–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ URL
    const analysisResponse = await fetch('https://uxaudute.vercel.app/api/research-with-credits', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        url: 'https://google.com',
        context: '–¢–µ—Å—Ç–æ–≤—ã–π –∞–Ω–∞–ª–∏–∑ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã Google'
      })
    })
    
    console.log('üìä Analysis response status:', analysisResponse.status)
    
    if (analysisResponse.status === 401) {
      console.log('‚ö†Ô∏è –¢—Ä–µ–±—É–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è - —ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ')
    } else {
      const analysisData = await analysisResponse.json()
      console.log('üìä Analysis data:', analysisData)
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞:', error)
  }
}

testAnalysis()