// –¢–µ—Å—Ç –ø–æ–ª–Ω–æ–≥–æ –ø–æ—Ç–æ–∫–∞ –∞–Ω–∞–ª–∏–∑–∞
console.log('üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª–Ω—ã–π –ø–æ—Ç–æ–∫ –∞–Ω–∞–ª–∏–∑–∞...')

// –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –≤—Å–µ —Å–∏—Å—Ç–µ–º—ã —Ä–∞–±–æ—Ç–∞—é—Ç
const checkSystems = async () => {
  try {
    // 1. Health check
    const health = await fetch('https://uxaudute.vercel.app/api/health')
    const healthData = await health.json()
    console.log('‚úÖ Health:', healthData.status)
    
    // 2. Debug endpoint
    const debug = await fetch('https://uxaudute.vercel.app/api/debug')
    const debugData = await debug.json()
    console.log('‚úÖ Debug:', debugData.status)
    
    // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ø—Ä–æ–º–ø—Ç—ã –¥–æ—Å—Ç—É–ø–Ω—ã
    const prompt = await fetch('https://uxaudute.vercel.app/prompts/ru/json-structured-prompt.md')
    console.log('‚úÖ Prompt status:', prompt.status)
    
    console.log('üéØ –í—Å–µ —Å–∏—Å—Ç–µ–º—ã —Ä–∞–±–æ—Ç–∞—é—Ç!')
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error)
  }
}

checkSystems()