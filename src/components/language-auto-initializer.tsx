'use client'

import { useEffect } from 'react'
import { useAutoLanguageInitialization } from '@/hooks/use-language-initialization'
import { LanguageInitializationStatus } from './language-initialization-status'

interface LanguageAutoInitializerProps {
  showStatus?: boolean
  showDetails?: boolean
  quickInit?: boolean
}

/**
 * –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —è–∑—ã–∫–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã
 * –î–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ä–∞–∑–º–µ—â–µ–Ω –≤ –∫–æ—Ä–Ω–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
 */
export function LanguageAutoInitializer({
  showStatus = false,
  showDetails = false,
  quickInit = true
}: LanguageAutoInitializerProps) {
  const initialization = useAutoLanguageInitialization({
    quick: quickInit,
    autoStart: true
  })

  useEffect(() => {
    // –õ–æ–≥–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    if (initialization.isInitialized && initialization.initializationResult) {
      console.log('üåê Language system auto-initialized:', initialization.initializationResult)
    }
    
    if (initialization.error) {
      console.error('‚ùå Language system auto-initialization failed:', initialization.error)
    }
  }, [initialization.isInitialized, initialization.error, initialization.initializationResult])

  return (
    <>
      {showStatus && (
        <LanguageInitializationStatus 
          showDetails={showDetails}
          autoHide={true}
          autoHideDelay={2000}
        />
      )}
    </>
  )
}