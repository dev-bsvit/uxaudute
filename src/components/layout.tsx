'use client'

import { ReactNode, useState, useEffect } from 'react'
import Link from 'next/link'
import { usePathname } from 'next/navigation'
import { Button } from '@/components/ui/button'
import { User, LogOut, Settings, ChevronDown, CreditCard, Shield } from 'lucide-react'
import { supabase } from '@/lib/supabase'
import { signOut, ensureUserHasInitialBalance } from '@/lib/database'
import { User as SupabaseUser } from '@supabase/supabase-js'

interface LayoutProps {
  children: ReactNode
  title?: string
  transparentHeader?: boolean
}

export function Layout({ children, title = 'UX Audit', transparentHeader = false }: LayoutProps) {
  const pathname = usePathname()
  const [user, setUser] = useState<SupabaseUser | null>(null)
  const [showUserMenu, setShowUserMenu] = useState(false)
  const [creditsBalance, setCreditsBalance] = useState<number | null>(null)
  const [isAdmin, setIsAdmin] = useState(false)
  
  // –ù–∞–≤–∏–≥–∞—Ü–∏—è —Å Dashboard –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞
  const navigation = [
    { name: '–ë—ã—Å—Ç—Ä—ã–π –∞–Ω–∞–ª–∏–∑', href: '/dashboard', current: pathname === '/dashboard' },
    { name: '–ú–æ–∏ –ø—Ä–æ–µ–∫—Ç—ã', href: '/projects', current: pathname.startsWith('/projects') },
  ]

  useEffect(() => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    supabase.auth.getUser().then(async ({ data: { user } }) => {
      console.log('üîç –ù–∞—á–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', user?.email, user?.id)
      console.log('üîç –î–µ—Ç–∞–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', {
        hasUser: !!user,
        email: user?.email,
        id: user?.id,
        isGoogleOAuth: user?.app_metadata?.provider === 'google',
        providers: user?.app_metadata?.providers
      })
      
      setUser(user)
      
      // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω, —É–±–µ–∂–¥–∞–µ–º—Å—è —á—Ç–æ —É –Ω–µ–≥–æ –µ—Å—Ç—å –Ω–∞—á–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å
      if (user) {
        console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–ª–∞–Ω—Å –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', user.id, user.email)
        console.log('üîç –í—ã–∑—ã–≤–∞–µ–º ensureUserHasInitialBalance –¥–ª—è —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...')
        try {
          await ensureUserHasInitialBalance(user.id)
          console.log('‚úÖ ensureUserHasInitialBalance –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ –¥–ª—è —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')
        } catch (error) {
          console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –±–∞–ª–∞–Ω—Å–∞:', error)
        }
        
        // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–ª–∞–Ω—Å–∞ —á–µ—Ä–µ–∑ API –¥–ª—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        setTimeout(async () => {
          try {
            console.log('üîç –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–ª–∞–Ω—Å–∞ —á–µ—Ä–µ–∑ API...')
            const response = await fetch('/api/credits/balance', {
              headers: {
                'Authorization': `Bearer ${(await supabase.auth.getSession()).data.session?.access_token}`
              }
            })
            const data = await response.json()
            console.log('üîç –†–µ–∑—É–ª—å—Ç–∞—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–∞–ª–∞–Ω—Å–∞:', data)
            
            if (data.success && data.balance === 0) {
              console.log('üîç –û–±–Ω–∞—Ä—É–∂–µ–Ω –Ω—É–ª–µ–≤–æ–π –±–∞–ª–∞–Ω—Å, —Å–æ–∑–¥–∞–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å...')
              await ensureUserHasInitialBalance(user.id)
            }
          } catch (err) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–∞–ª–∞–Ω—Å–∞:', err)
          }
        }, 2000)
        
        // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        setTimeout(async () => {
          try {
            console.log('üîç Layout: –ø—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ—Ö –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...')
            const response = await fetch('/api/ensure-all-users-have-credits', {
              method: 'POST'
            })
            const data = await response.json()
            console.log('üîç Layout: —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:', data)
          } catch (err) {
            console.error('‚ùå Layout: –æ—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:', err)
          }
        }, 4000)
      }
    })

    // –°–ª—É—à–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
    const { data: { subscription } } = supabase.auth.onAuthStateChange(async (event, session) => {
      console.log('üîÑ Auth state change:', event, session?.user?.email, session?.user?.id)
      console.log('üîÑ Session details:', { 
        hasSession: !!session, 
        hasUser: !!session?.user,
        userEmail: session?.user?.email,
        userId: session?.user?.id,
        event: event
      })
      setUser(session?.user ?? null)
      
      // –õ–æ–≥–∏—Ä—É–µ–º –í–°–ï —Å–æ–±—ã—Ç–∏—è –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ Google OAuth
      console.log('üîç –í–°–ï –°–û–ë–´–¢–ò–Ø –ê–£–¢–ï–ù–¢–ò–§–ò–ö–ê–¶–ò–ò:', {
        event: event,
        hasUser: !!session?.user,
        userEmail: session?.user?.email,
        userId: session?.user?.id,
        isGoogleOAuth: session?.user?.app_metadata?.provider === 'google',
        providers: session?.user?.app_metadata?.providers
      })
      
      // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–ª—Å—è, —É–±–µ–∂–¥–∞–µ–º—Å—è —á—Ç–æ —É –Ω–µ–≥–æ –µ—Å—Ç—å –Ω–∞—á–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å
      // –†–∞—Å—à–∏—Ä—è–µ–º —É—Å–ª–æ–≤–∏—è –¥–ª—è Google OAuth
      if (session?.user && (event === 'SIGNED_IN' || event === 'TOKEN_REFRESHED' || event === 'INITIAL_SESSION')) {
        console.log('üîç –°–æ–∑–¥–∞–µ–º –±–∞–ª–∞–Ω—Å –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', session.user.id, session.user.email, '—Å–æ–±—ã—Ç–∏–µ:', event)
        console.log('üîç –í—ã–∑—ã–≤–∞–µ–º ensureUserHasInitialBalance...')
        console.log('üîç –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è:', new Date().toISOString())
        
        try {
          console.log('üîç –ù–∞—á–∏–Ω–∞–µ–º –≤—ã–∑–æ–≤ ensureUserHasInitialBalance...')
          await ensureUserHasInitialBalance(session.user.id)
          console.log('‚úÖ ensureUserHasInitialBalance –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ')
          
          // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏–º –±–∞–ª–∞–Ω—Å —á–µ—Ä–µ–∑ API
          setTimeout(async () => {
            try {
              console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–ª–∞–Ω—Å —á–µ—Ä–µ–∑ API —á–µ—Ä–µ–∑ 1 —Å–µ–∫—É–Ω–¥—É...')
              const response = await fetch('/api/credits/balance', {
                headers: {
                  'Authorization': `Bearer ${session.access_token}`
                }
              })
              const data = await response.json()
              console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–ª–∞–Ω—Å–∞ –ø–æ—Å–ª–µ ensureUserHasInitialBalance:', data)
              
              // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞
              if (data.success) {
                setCreditsBalance(data.balance)
                console.log('üîç –û–±–Ω–æ–≤–ª–µ–Ω –±–∞–ª–∞–Ω—Å –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏:', data.balance)
                
                // –ï—Å–ª–∏ –±–∞–ª–∞–Ω—Å –≤—Å–µ –µ—â–µ 0, –ø–æ–ø—Ä–æ–±—É–µ–º –µ—â–µ —Ä–∞–∑ —Å–æ–∑–¥–∞—Ç—å –Ω–∞—á–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å
                if (data.balance === 0) {
                  console.log('üîç –ë–∞–ª–∞–Ω—Å –≤—Å–µ –µ—â–µ 0, –ø–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ –±–∞–ª–∞–Ω—Å–∞...')
                  await ensureUserHasInitialBalance(session.user.id)
                }
              }
            } catch (err) {
              console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–∞–ª–∞–Ω—Å–∞:', err)
            }
          }, 1000)
        } catch (error) {
          console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –±–∞–ª–∞–Ω—Å–∞:', error)
          console.error('‚ùå –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:', error)
        }
      } else {
        console.log('üîç –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –∏–ª–∏ —Å–æ–±—ã—Ç–∏–µ –Ω–µ –ø–æ–¥—Ö–æ–¥–∏—Ç:', { 
          hasUser: !!session?.user, 
          event: event,
          shouldProcess: session?.user && (event === 'SIGNED_IN' || event === 'TOKEN_REFRESHED')
        })
      }
    })

    // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–µ–Ω—é –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –µ–≥–æ
    const handleClickOutside = (event: MouseEvent) => {
      const target = event.target as Element
      if (!target.closest('[data-user-menu]')) {
        setShowUserMenu(false)
      }
    }

    document.addEventListener('click', handleClickOutside)

    return () => {
      subscription.unsubscribe()
      document.removeEventListener('click', handleClickOutside)
    }
  }, [])

  // –ó–∞–≥—Ä—É–∂–∞–µ–º –±–∞–ª–∞–Ω—Å –∫—Ä–µ–¥–∏—Ç–æ–≤
  useEffect(() => {
    const fetchCreditsBalance = async () => {
      if (!user) return
      
      try {
        const { data: session } = await supabase.auth.getSession()
        if (!session?.session?.access_token) {
          console.log('No access token available')
          return
        }

        const response = await fetch('/api/credits/balance', {
          method: 'GET',
          headers: {
            'Authorization': `Bearer ${session.session.access_token}`
          }
        })
        const data = await response.json()
        if (data.success) {
          setCreditsBalance(data.balance)
        } else {
          console.error('Error fetching balance:', data.error)
          // Fallback –Ω–∞ –¥–µ–º–æ API –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
          try {
            const demoResponse = await fetch('/api/credits/demo-balance')
            const demoData = await demoResponse.json()
            if (demoData.success) {
              setCreditsBalance(demoData.balance)
            }
          } catch (demoError) {
            console.error('Demo API also failed:', demoError)
          }
        }
      } catch (error) {
        console.error('Error fetching credits balance:', error)
      }
    }

    if (user) {
      fetchCreditsBalance()
    }
  }, [user])

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
  const checkAdminRights = (user: SupabaseUser) => {
    // –°–ø–∏—Å–æ–∫ email –∞–¥—Ä–µ—Å–æ–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
    const adminEmails = [
      'designbsvit@gmail.com'
    ]
    
    return adminEmails.includes(user.email || '')
  }

  // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –∞–¥–º–∏–Ω–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  useEffect(() => {
    if (user) {
      setIsAdmin(checkAdminRights(user))
    } else {
      setIsAdmin(false)
    }
  }, [user])

  const handleSignOut = async () => {
    try {
      await signOut()
      setUser(null)
      setShowUserMenu(false)
      window.location.href = '/'
    } catch (error) {
      console.error('Error signing out:', error)
    }
  }

  return (
    <div className="min-h-screen">
      <header className={`${transparentHeader ? 'bg-transparent absolute top-0 left-0 right-0 z-50' : 'bg-white shadow-sm border-b'}`}>
        <div className="w-full px-4 sm:px-6 lg:px-8">
          <div className="flex items-center justify-between h-16">
            <div className="flex items-center space-x-8">
              <Link href="/" className={`flex items-center space-x-2 text-xl font-bold transition-colors ${
                transparentHeader 
                  ? 'text-white hover:text-blue-200' 
                  : 'text-blue-600 hover:text-blue-700'
              }`}>
                <img 
                  src="/logo.svg" 
                  alt="UX Audit" 
                  className="h-6 w-auto"
                />
              </Link>
              
              <nav className="hidden md:flex space-x-6">
                {navigation.map((item) => (
                  <Link
                    key={item.name}
                    href={item.href}
                    className={`px-3 py-2 rounded-md text-sm font-medium transition-colors ${
                      transparentHeader
                        ? item.current
                          ? 'bg-white/20 text-white'
                          : 'text-white/80 hover:text-white hover:bg-white/10'
                        : item.current
                          ? 'bg-blue-100 text-blue-700'
                          : 'text-gray-600 hover:text-gray-900 hover:bg-gray-50'
                    }`}
                  >
                    {item.name}
                  </Link>
                ))}
              </nav>
            </div>
            
            <div className="flex items-center space-x-4">
              {title !== 'UX Audit' && (
                <div className="text-sm text-gray-600 hidden sm:block">
                  {title}
                </div>
              )}
              
              {user ? (
                <div className="relative" data-user-menu>
                  <Button
                    variant="ghost"
                    size="sm"
                    onClick={() => setShowUserMenu(!showUserMenu)}
                    className="flex items-center gap-2 text-gray-700 hover:text-gray-900"
                  >
                    <div className="w-8 h-8 rounded-full bg-gradient-to-r from-blue-500 to-purple-600 flex items-center justify-center">
                      <User className="w-4 h-4 text-white" />
                    </div>
                    <span className="hidden sm:inline text-sm font-medium">
                      {user.user_metadata?.full_name || user.email?.split('@')[0]}
                    </span>
                    <ChevronDown className="w-4 h-4" />
                  </Button>
                  
                  {showUserMenu && (
                    <div className="absolute right-0 mt-2 w-48 bg-white rounded-lg shadow-lg border border-gray-200 py-1 z-50">
                      <div className="px-4 py-2 border-b border-gray-100">
                        <p className="text-sm font-medium text-gray-900">
                          {user.user_metadata?.full_name || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'}
                        </p>
                        <p className="text-xs text-gray-500">{user.email}</p>
                      </div>

                      {/* –ë–∞–ª–∞–Ω—Å –∫—Ä–µ–¥–∏—Ç–æ–≤ */}
                      <div className="px-4 py-2 border-b border-gray-100">
                        <div className="flex items-center justify-between">
                          <span className="text-sm font-medium text-gray-900">–ë–∞–ª–∞–Ω—Å –∫—Ä–µ–¥–∏—Ç–æ–≤</span>
                          <span className="text-lg font-bold text-blue-600">
                            {creditsBalance !== null ? creditsBalance : '...'}
                          </span>
                        </div>
                      </div>
                      
                      <Link
                        href="/dashboard"
                        className="flex items-center gap-2 px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 transition-colors"
                        onClick={() => setShowUserMenu(false)}
                      >
                        <span>üéØ</span>
                        –ë—ã—Å—Ç—Ä—ã–π –∞–Ω–∞–ª–∏–∑
                      </Link>
                      
                      <Link
                        href="/projects"
                        className="flex items-center gap-2 px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 transition-colors"
                        onClick={() => setShowUserMenu(false)}
                      >
                        <Settings className="w-4 h-4" />
                        –ú–æ–∏ –ø—Ä–æ–µ–∫—Ç—ã
                      </Link>

                      <Link
                        href="/credits"
                        className="flex items-center gap-2 px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 transition-colors"
                        onClick={() => setShowUserMenu(false)}
                      >
                        <CreditCard className="w-4 h-4" />
                        –°—á–µ—Ç
                      </Link>

                      {isAdmin && (
                        <Link
                          href="/admin"
                          className="flex items-center gap-2 px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 transition-colors"
                          onClick={() => setShowUserMenu(false)}
                        >
                          <Shield className="w-4 h-4" />
                          –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å
                        </Link>
                      )}
                      
                      <button
                        onClick={handleSignOut}
                        className="flex items-center gap-2 w-full px-4 py-2 text-sm text-red-600 hover:bg-red-50 transition-colors"
                      >
                        <LogOut className="w-4 h-4" />
                        –í—ã–π—Ç–∏
                      </button>
                    </div>
                  )}
                </div>
              ) : (
                <Link href="/dashboard">
                  <Button size="sm" className="bg-blue-600 hover:bg-blue-700 text-white">
                    –í–æ–π—Ç–∏
                  </Button>
                </Link>
              )}
            </div>
          </div>
        </div>
      </header>
      
      <main>
        {children}
      </main>
    </div>
  )
}
