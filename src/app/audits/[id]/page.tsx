'use client'

import { useState, useEffect } from 'react'
import { Layout } from '@/components/layout'
import { ActionPanel } from '@/components/action-panel'
import { AnalysisResult } from '@/components/analysis-result'
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'
import { Button } from '@/components/ui/button'
import { Download, Share } from 'lucide-react'
import { BackArrow } from '@/components/icons/back-arrow'
import { type ActionType } from '@/lib/utils'
import { StructuredAnalysisResponse } from '@/lib/analysis-types'
import { safeAdaptAnalysisData } from '@/lib/analysis-data-adapter'
import Link from 'next/link'
import { useParams, useRouter } from 'next/navigation'
import { supabase } from '@/lib/supabase'
import { getAudit } from '@/lib/database'

interface AuditData {
  id: string
  name: string
  project_id: string
  type: string
  status: string
  created_at: string
  result_data?: {
    analysis_result?: string | StructuredAnalysisResponse
    screenshot_url?: string
  } | StructuredAnalysisResponse | any
  input_data?: Record<string, unknown> | null
  confidence?: number | null
}

export default function AuditPage() {
  const params = useParams()
  const router = useRouter()
  const auditId = params.id as string
  const [activeTab, setActiveTab] = useState<'result' | 'collected' | 'expert'>('result')
  const [auditData, setAuditData] = useState<AuditData | null>(null)
  const [loading, setLoading] = useState(true)
  const [error, setError] = useState<string | null>(null)

  useEffect(() => {
    loadAuditData()
  }, [auditId])

  const loadAuditData = async () => {
    try {
      setLoading(true)
      const audit = await getAudit(auditId)
      
      if (!audit) {
        setError('–ê—É–¥–∏—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω')
        return
      }

      console.log('–ê—É–¥–∏—Ç –∑–∞–≥—Ä—É–∂–µ–Ω:', audit)
      console.log('‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç –Ω–∞–π–¥–µ–Ω –≤ audits:', audit.result_data)
      console.log('–û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∞—É–¥–∏—Ç–∞:', audit.result_data)
      console.log('–ö–ª—é—á–∏ result_data:', Object.keys(audit.result_data || {}))
      console.log('analysis_result:', audit.result_data?.analysis_result)
      console.log('–í–µ—Å—å result_data:', JSON.stringify(audit.result_data))

      // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç - –æ–Ω –º–æ–∂–µ—Ç –±—ã—Ç—å –≤ —Ä–∞–∑–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–∞—Ö
      let analysisResult: string | StructuredAnalysisResponse | undefined
      
      console.log('üîç AUDIT PAGE: –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç...')
      console.log('üîç AUDIT PAGE: result_data type:', typeof audit.result_data)
      console.log('üîç AUDIT PAGE: result_data keys:', Object.keys(audit.result_data || {}))
      
      if (audit.result_data?.analysis_result) {
        console.log('‚úÖ AUDIT PAGE: –ù–∞–π–¥–µ–Ω analysis_result –≤ result_data')
        analysisResult = audit.result_data.analysis_result as string | StructuredAnalysisResponse
      } else if (audit.result_data?.content) {
        console.log('‚úÖ AUDIT PAGE: –ù–∞–π–¥–µ–Ω content –≤ result_data')
        // –†–µ–∑—É–ª—å—Ç–∞—Ç –º–æ–∂–µ—Ç –±—ã—Ç—å –≤ –ø–æ–ª–µ content
        analysisResult = audit.result_data.content as string
      } else if (audit.result_data && (audit.result_data.screenDescription || audit.result_data.uxSurvey || audit.result_data.audience)) {
        console.log('‚úÖ AUDIT PAGE: result_data —Å–æ–¥–µ—Ä–∂–∏—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –Ω–∞–ø—Ä—è–º—É—é')
        // –í –Ω–æ–≤–æ–π —Å–∏—Å—Ç–µ–º–µ –¥–∞–Ω–Ω—ã–µ –ª–µ–∂–∞—Ç –ø—Ä—è–º–æ –≤ result_data
        analysisResult = audit.result_data as any
      } else if (audit.result_data) {
        console.log('‚úÖ AUDIT PAGE: –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤–µ—Å—å result_data –∫–∞–∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç')
        // –í–µ—Å—å result_data –º–æ–∂–µ—Ç –±—ã—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º
        analysisResult = audit.result_data as any
      } else {
        console.log('‚ùå AUDIT PAGE: –†–µ–∑—É–ª—å—Ç–∞—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω')
      }

      console.log('üîç AUDIT PAGE: –§–∏–Ω–∞–ª—å–Ω—ã–π analysisResult:', analysisResult)
      console.log('üîç AUDIT PAGE: –¢–∏–ø analysisResult:', typeof analysisResult)
      
      // –ê–¥–∞–ø—Ç–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –∫ –Ω–æ–≤–æ–º—É —Ñ–æ—Ä–º–∞—Ç—É
      console.log('üîÑ AUDIT PAGE: Attempting to adapt data format...')
      const adaptedResult = safeAdaptAnalysisData(analysisResult || audit.result_data)
      
      if (adaptedResult) {
        console.log('‚úÖ AUDIT PAGE: Data successfully adapted:', Object.keys(adaptedResult))
        setAuditData({
          ...audit,
          result_data: {
            ...audit.result_data,
            analysis_result: adaptedResult
          }
        })
      } else {
        console.log('‚ö†Ô∏è AUDIT PAGE: Could not adapt data, using original format')
        setAuditData({
          ...audit,
          result_data: {
            ...audit.result_data,
            analysis_result: analysisResult || audit.result_data
          }
        })
      }
    } catch (err) {
      console.error('Error loading audit:', err)
      setError('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∞—É–¥–∏—Ç–∞')
    } finally {
      setLoading(false)
    }
  }

  const handleAction = (action: ActionType) => {
    console.log('Action:', action)
    // TODO: Implement action handlers
  }

  const handleExport = () => {
    // TODO: Implement export functionality
    console.log('Export audit')
  }

  const handleShare = () => {
    // TODO: Implement share functionality  
    console.log('Share audit')
  }

  if (loading) {
    return (
      <Layout title="–ó–∞–≥—Ä—É–∑–∫–∞...">
        <div className="min-h-screen bg-gray-100 flex items-center justify-center">
          <div className="animate-spin rounded-full h-8 w-8 border-2 border-blue-500 border-t-transparent"></div>
        </div>
      </Layout>
    )
  }

  if (error || !auditData) {
    return (
      <Layout title="–û—à–∏–±–∫–∞">
        <div className="min-h-screen bg-gray-100 flex items-center justify-center">
          <div className="text-center py-12 bg-white rounded-2xl shadow-lg p-8">
            <h2 className="text-2xl font-bold text-slate-900 mb-4">
              {error || '–ê—É–¥–∏—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω'}
            </h2>
            <BackArrow onClick={() => router.push('/projects')} />
          </div>
        </div>
      </Layout>
    )
  }

  return (
    <Layout title={`–ê—É–¥–∏—Ç: ${auditData.name}`}>
      <div className="space-y-6">
        {/* –ù–∞–≤–∏–≥–∞—Ü–∏—è –Ω–∞–∑–∞–¥ –∏ –¥–µ–π—Å—Ç–≤–∏—è */}
        <div className="flex items-center justify-between">
          <div className="flex items-center space-x-4">
            <div>
              <h1 className="text-2xl font-bold text-gray-900">
                {auditData.name}
              </h1>
              <p className="text-gray-600">
                {auditData.type} ‚Ä¢ {new Date(auditData.created_at).toLocaleDateString('ru-RU')}
              </p>
            </div>
          </div>
          
          <div className="flex space-x-2">
            <Button variant="outline" size="sm" onClick={handleShare}>
              <Share className="w-4 h-4 mr-2" />
              –ü–æ–¥–µ–ª–∏—Ç—å—Å—è
            </Button>
            <Button variant="outline" size="sm" onClick={handleExport}>
              <Download className="w-4 h-4 mr-2" />
              –≠–∫—Å–ø–æ—Ä—Ç
            </Button>
          </div>
        </div>

        {/* –¢–∞–±—ã */}
        <div className="border-b border-gray-200">
          <nav className="-mb-px flex space-x-8">
            {[
              { id: 'result', label: '–†–µ–∑—É–ª—å—Ç–∞—Ç –∞–Ω–∞–ª–∏–∑–∞' },
              { id: 'collected', label: '–°–æ–±—Ä–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ' },
              { id: 'expert', label: '–≠–∫—Å–ø–µ—Ä—Ç–Ω—ã–µ –∑–∞–∫–ª—é—á–µ–Ω–∏—è' }
            ].map((tab) => (
                          <button
              key={tab.id}
              onClick={() => setActiveTab(tab.id as typeof activeTab)}
              className={`py-2 px-1 border-b-2 font-medium text-sm ${
                  activeTab === tab.id
                    ? 'border-blue-500 text-blue-600'
                    : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'
                }`}
              >
                {tab.label}
              </button>
            ))}
          </nav>
        </div>

        {/* –ö–æ–Ω—Ç–µ–Ω—Ç —Ç–∞–±–æ–≤ */}
        <div className="space-y-6">
          {activeTab === 'result' && (
            <div>
              {auditData.result_data?.analysis_result ? (
                <AnalysisResult 
                  result={auditData.result_data.analysis_result}
                  screenshot={auditData.result_data.screenshot_url || (auditData.input_data as any)?.screenshotUrl}
                  url={(auditData.input_data as any)?.url}
                  auditId={auditId}
                />
              ) : (
                <Card>
                  <CardContent className="pt-6">
                    <div className="text-center py-8">
                      <p className="text-gray-500">–†–µ–∑—É–ª—å—Ç–∞—Ç –∞–Ω–∞–ª–∏–∑–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω</p>
                    </div>
                  </CardContent>
                </Card>
              )}
            </div>
          )}

          {activeTab === 'collected' && (
            <Card>
              <CardHeader>
                <CardTitle>–°–æ–±—Ä–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ</CardTitle>
              </CardHeader>
              <CardContent>
                <p className="text-gray-600">
                  –ó–¥–µ—Å—å –±—É–¥—É—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –≤—Å–µ –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –æ—Ç–≤–µ—Ç—ã –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞, 
                  —Å–æ–±—Ä–∞–Ω–Ω—ã–µ –≤ –µ–¥–∏–Ω—ã–π –¥–æ–∫—É–º–µ–Ω—Ç –ø—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ —Ñ—É–Ω–∫—Ü–∏–∏ &quot;–°–æ–±—Ä–∞—Ç—å –≤ –æ–¥–∏–Ω&quot;.
                </p>
              </CardContent>
            </Card>
          )}

          {activeTab === 'expert' && (
            <Card>
              <CardHeader>
                <CardTitle>–≠–∫—Å–ø–µ—Ä—Ç–Ω—ã–µ –∑–∞–∫–ª—é—á–µ–Ω–∏—è</CardTitle>
              </CardHeader>
              <CardContent>
                <p className="text-gray-600">
                  –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –±–∏–∑–Ω–µ—Å-–∞–Ω–∞–ª–∏—Ç–∏–∫–∏, A/B —Ç–µ—Å—Ç–æ–≤ –∏ —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –≥–∏–ø–æ—Ç–µ–∑ 
                  –±—É–¥—É—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –≤ —ç—Ç–æ–º —Ä–∞–∑–¥–µ–ª–µ.
                </p>
              </CardContent>
            </Card>
          )}
        </div>

        {/* –ü–∞–Ω–µ–ª—å –¥–µ–π—Å—Ç–≤–∏–π */}
        <ActionPanel onAction={handleAction} />
      </div>
    </Layout>
  )
}
