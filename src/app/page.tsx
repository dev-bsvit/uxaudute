'use client'

import { Layout } from '@/components/layout'
import { useEffect, useState } from 'react'
import { Button } from '@/components/ui/button'
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'
import { HeroSection } from '@/components/hero-section'
import Link from 'next/link'
import { ArrowRight, Zap, Shield, BarChart3, Users } from 'lucide-react'
import { createClient } from '@supabase/supabase-js'
import { ensureUserHasInitialBalance } from '@/lib/database'
import { useTranslation } from '@/hooks/use-translation'

export default function HomePage() {
  // –í–µ—Ä—Å–∏—è 1.1.2 - –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º –∏ —Ä–µ—à–µ–Ω–∏–π
  const [mounted, setMounted] = useState(false)
  const { t } = useTranslation()
  
  useEffect(() => {
    setMounted(true)
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–ª–∞–Ω—Å –≤—Å–µ—Ö –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    const checkUserBalance = async () => {
      try {
        const supabase = createClient(
          process.env.NEXT_PUBLIC_SUPABASE_URL!,
          process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!
        )
        
        const { data: { user } } = await supabase.auth.getUser()
        if (user) {
          console.log('üîç –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞: –ø—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è', user.email, user.id)
          
          // –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–ª–∞–Ω—Å —á–µ—Ä–µ–∑ API
          const response = await fetch('/api/credits/balance', {
            headers: {
              'Authorization': `Bearer ${(await supabase.auth.getSession()).data.session?.access_token}`
            }
          })
          const data = await response.json()
          console.log('üîç –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞: —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–∞–ª–∞–Ω—Å–∞', data)
          
          if (data.success && data.balance === 0) {
            console.log('üîç –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞: –æ–±–Ω–∞—Ä—É–∂–µ–Ω –Ω—É–ª–µ–≤–æ–π –±–∞–ª–∞–Ω—Å, —Å–æ–∑–¥–∞–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å')
            await ensureUserHasInitialBalance(user.id)
          }
        }
      } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–∞–ª–∞–Ω—Å–∞ –Ω–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ:', error)
      }
    }
    
    // –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    setTimeout(checkUserBalance, 3000)
    
    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –ø—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ—Ö –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    setTimeout(async () => {
      try {
        console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ—Ö –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –∫—Ä–µ–¥–∏—Ç–æ–≤...')
        const response = await fetch('/api/ensure-all-users-have-credits', {
          method: 'POST'
        })
        const data = await response.json()
        console.log('üîç –†–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:', data)
      } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:', error)
      }
    }, 5000)
  }, [])
  
  const features = [
    {
      icon: <Zap className="w-8 h-8 text-blue-600" />,
      title: t('analysis.features.gpt4Analysis.title'),
      description: t('analysis.features.gpt4Analysis.description')
    },
    {
      icon: <Shield className="w-8 h-8 text-green-600" />,
      title: t('analysis.features.uxMethodologies.title'),
      description: t('analysis.features.uxMethodologies.description')
    },
    {
      icon: <BarChart3 className="w-8 h-8 text-purple-600" />,
      title: t('analysis.features.detailedReports.title'),
      description: t('analysis.features.detailedReports.description')
    },
    {
      icon: <Users className="w-8 h-8 text-orange-600" />,
      title: t('analysis.features.projectManagement.title'),
      description: t('analysis.features.projectManagement.description')
    }
  ]

  const scrollStackSteps = [
    {
      heading:
        currentLanguage === 'en'
          ? 'Drop the latest interface'
          : '–ó–∞–≥—Ä—É–∑–∏—Ç–µ –∞–∫—Ç—É–∞–ª—å–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å',
      description:
        currentLanguage === 'en'
          ? 'Simply drag & drop a screenshot or paste a link. QuickUX prepares assets and highlights the main interaction zones automatically.'
          : '–ü—Ä–æ—Å—Ç–æ –ø–µ—Ä–µ—Ç–∞—â–∏—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç –∏–ª–∏ –≤—Å—Ç–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É. QuickUX –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç –º–∞—Ç–µ—Ä–∏–∞–ª—ã –∏ –≤—ã–¥–µ–ª–∏—Ç –∫–ª—é—á–µ–≤—ã–µ –∑–æ–Ω—ã –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏.',
    },
    {
      heading:
        currentLanguage === 'en'
          ? 'Add the business context'
          : '–î–æ–±–∞–≤—å—Ç–µ –±–∏–∑–Ω–µ—Å-–∫–æ–Ω—Ç–µ–∫—Å—Ç',
      description:
        currentLanguage === 'en'
          ? 'Specify goals, target metrics or audience insights so AI analysis focuses on what really matters for your product.'
          : '–û–ø–∏—à–∏—Ç–µ —Ü–µ–ª–∏, —Ü–µ–ª–µ–≤—ã–µ –º–µ—Ç—Ä–∏–∫–∏ –∏–ª–∏ –Ω—é–∞–Ω—Å—ã –∞—É–¥–∏—Ç–æ—Ä–∏–∏, —á—Ç–æ–±—ã AI —Å—Ñ–æ–∫—É—Å–∏—Ä–æ–≤–∞–ª—Å—è –Ω–∞ —Ç–æ–º, —á—Ç–æ –≤–∞–∂–Ω–æ –∏–º–µ–Ω–Ω–æ –¥–ª—è –≤–∞—à–µ–≥–æ –ø—Ä–æ–¥—É–∫—Ç–∞.',
    },
    {
      heading:
        currentLanguage === 'en'
          ? 'Run AI analysis and share'
          : '–ó–∞–ø—É—Å—Ç–∏—Ç–µ –∞–Ω–∞–ª–∏–∑ –∏ –ø–æ–¥–µ–ª–∏—Ç–µ—Å—å',
      description:
        currentLanguage === 'en'
          ? 'QuickUX benchmarks your UI against thousands of patterns, surfaces UX debt, drafts experiments and lets you share a live report with the team.'
          : 'QuickUX —Å—Ä–∞–≤–Ω–∏–≤–∞–µ—Ç –≤–∞—à –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å —Å —Ç—ã—Å—è—á–∞–º–∏ –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤, –Ω–∞—Ö–æ–¥–∏—Ç UX-–¥–æ–ª–≥–∏, —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç –≥–∏–ø–æ—Ç–µ–∑—ã –∏ –ø–æ–∑–≤–æ–ª—è–µ—Ç –¥–µ–ª–∏—Ç—å—Å—è –∂–∏–≤—ã–º –æ—Ç—á–µ—Ç–æ–º —Å –∫–æ–º–∞–Ω–¥–æ–π.',
    },
  ]

  return (
    <Layout transparentHeader={true}>
      {/* Hero —Å–µ–∫—Ü–∏—è —Å –≥—Ä–∞–¥–∏–µ–Ω—Ç–æ–º –Ω–∞ –≤—Å—é —à–∏—Ä–∏–Ω—É */}
      <HeroSection />
      
      <div className="bg-white">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          {/* –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ */}
          <div className="py-12">
            <div className="max-w-6xl mx-auto px-6">
              <div className="grid md:grid-cols-2 lg:grid-cols-4 gap-8">
                {features.map((feature, index) => (
                  <Card key={index} className="text-center border-0 shadow-lg hover:shadow-xl transition-shadow bg-white">
                    <CardHeader>
                      <div className="flex justify-center mb-4">
                        {feature.icon}
                      </div>
                      <CardTitle className="text-xl text-slate-900">
                        {feature.title}
                      </CardTitle>
                    </CardHeader>
                    <CardContent>
                      <p className="text-slate-600 leading-relaxed">
                        {feature.description}
                      </p>
                    </CardContent>
                  </Card>
                ))}
              </div>
            </div>
          </div>

          {/* CTA —Å–µ–∫—Ü–∏—è */}
          <div className="py-20 text-center">
            <div className="max-w-3xl mx-auto px-6">
              <h2 className="text-3xl font-bold text-slate-900 mb-6">
                {t('analysis.cta.title')}
              </h2>
              <p className="text-lg text-slate-600 mb-8">
                {t('analysis.cta.description')}
              </p>
              <div className="space-x-4">
                <Link href="/dashboard">
                  <Button size="lg" className="px-8 py-4 text-lg">
                    {t('analysis.cta.startFree')}
                    <ArrowRight className="w-5 h-5 ml-2" />
                  </Button>
                </Link>
                <Link href="/credits">
                  <Button variant="outline" size="lg" className="px-8 py-4 text-lg">
                    {t('analysis.cta.manageCredits')}
                  </Button>
                </Link>
              </div>
            </div>
          </div>
        </div>
      </div>

      {/* Section 3 */}
      <div className="py-20">
        <div className="max-w-6xl mx-auto px-6">
          <div className="mb-12 space-y-4 text-center">
            <span className="inline-flex items-center justify-center rounded-full bg-blue-50 px-4 py-1 text-sm font-semibold text-blue-600">
              {currentLanguage === 'en' ? 'Section 3' : '–°–µ–∫—Ü–∏—è 3'}
            </span>
            <h2 className="text-3xl font-bold text-slate-900 sm:text-4xl">
              {currentLanguage === 'en'
                ? 'From screenshot to action plan ‚Äî in one flow'
                : '–û—Ç —Å–∫—Ä–∏–Ω—à–æ—Ç–∞ –¥–æ –ø–ª–∞–Ω–∞ –¥–µ–π—Å—Ç–≤–∏–π ‚Äî –∑–∞ –æ–¥–∏–Ω –ø–æ—Ç–æ–∫'}
            </h2>
            <p className="mx-auto max-w-3xl text-base text-slate-600 sm:text-lg">
              {currentLanguage === 'en'
                ? 'QuickUX reduces manual discovery work: follow the flow once and rerun it every time you ship updates.'
                : 'QuickUX —Å–æ–∫—Ä–∞—â–∞–µ—Ç —Ä—É—á–Ω–æ–π —Ä–µ—Å—ë—Ä—á: –æ–¥–∏–Ω —Ä–∞–∑ –ø—Ä–æ–π–¥–∏—Ç–µ –ø–æ —à–∞–≥–∞–º –∏ –∑–∞–ø—É—Å–∫–∞–π—Ç–µ –∞–Ω–∞–ª–∏–∑ –∑–∞–Ω–æ–≤–æ –ø—Ä–∏ –∫–∞–∂–¥–æ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞.'}
            </p>
          </div>

          <div className="space-y-8">
            {scrollStackSteps.map((step, idx) => (
              <div key={step.heading} className="bg-white rounded-2xl p-8 shadow-sm border border-gray-100">
                <div className="flex items-start justify-between pb-6 text-blue-600">
                  <span className="text-sm font-semibold uppercase tracking-wide">
                    {(currentLanguage === 'en' ? 'Step ' : '–®–∞–≥ ') + (idx + 1)}
                  </span>
                  <span className="flex h-10 w-10 items-center justify-center rounded-full bg-blue-50 text-base font-semibold">
                    {(idx + 1).toString().padStart(2, '0')}
                  </span>
                </div>
                <h3 className="mb-4 text-3xl font-semibold text-slate-900">
                  {step.heading}
                </h3>
                <p className="text-base leading-relaxed text-slate-600">
                  {step.description}
                </p>
              </div>
            ))}
          </div>
        </div>
      </div>
    </Layout>
  )
}
