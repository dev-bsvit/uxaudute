import { NextRequest, NextResponse } from 'next/server'
import { executeAIRequest, AIResponse } from '@/lib/ai-provider'
import { StructuredAnalysisResponse, isStructuredResponse } from '@/lib/analysis-types'
import { validateSurvey, analyzeSurveyResults } from '@/lib/survey-utils'
import { supabase } from '@/lib/supabase'
import { loadJSONPrompt, combineWithContext } from '@/lib/prompt-loader'
import { checkCreditsForAudit, safeDeductCreditsForAudit } from '@/lib/credits'
import { FALLBACK_LANGUAGE } from '@/lib/i18n'

export async function POST(request: NextRequest) {
  try {
    console.log('=== RESEARCH WITH CREDITS API –≤—ã–∑–≤–∞–Ω ===')
    const {
      url,
      screenshot,
      context,
      provider = 'openai',
      openrouterModel = 'sonoma',
      auditId,
      language = FALLBACK_LANGUAGE,
      requiredCredits = 2 // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é 2 –∫—Ä–µ–¥–∏—Ç–∞ –∑–∞ –±–∞–∑–æ–≤—ã–π UX –∞–Ω–∞–ª–∏–∑
    } = await request.json()

    console.log('–ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—Ä–æ—Å–∞:', {
      url: !!url,
      screenshot: !!screenshot,
      context: !!context,
      provider,
      openrouterModel,
      auditId,
      language,
      requiredCredits
    })

    if (!url && !screenshot) {
      console.log('–û—à–∏–±–∫–∞: –Ω–µ—Ç URL –∏–ª–∏ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞')
      return NextResponse.json(
        { error: 'URL –∏–ª–∏ —Å–∫—Ä–∏–Ω—à–æ—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞' },
        { status: 400 }
      )
    }

    // –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫—Ä–µ–¥–∏—Ç–æ–≤
    const authHeader = request.headers.get('authorization')
    if (!authHeader) {
      return NextResponse.json({ error: 'Authorization header required' }, { status: 401 })
    }

    const token = authHeader.replace('Bearer ', '')
    const { data: { user }, error: authError } = await supabase.auth.getUser(token)
    
    if (authError || !user) {
      return NextResponse.json({ error: 'Invalid token' }, { status: 401 })
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—Ä–µ–¥–∏—Ç—ã –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º –∞—É–¥–∏—Ç–∞
    console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—Ä–µ–¥–∏—Ç—ã –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', user.id)
    console.log('üîç –¢–∏–ø –∞—É–¥–∏—Ç–∞: research, —Ç—Ä–µ–±—É–µ—Ç—Å—è –∫—Ä–µ–¥–∏—Ç–æ–≤:', requiredCredits)

    const creditsCheck = await checkCreditsForAudit(user.id, 'research', requiredCredits)
    console.log('üîç –†–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫—Ä–µ–¥–∏—Ç–æ–≤:', JSON.stringify(creditsCheck, null, 2))
    
    if (!creditsCheck.canProceed) {
      console.log('‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∫—Ä–µ–¥–∏—Ç–æ–≤:', creditsCheck)
      return NextResponse.json({
        error: 'Insufficient credits',
        message: creditsCheck.message,
        required_credits: creditsCheck.requiredCredits,
        current_balance: creditsCheck.currentBalance,
        is_test_account: creditsCheck.isTestAccount
      }, { status: 402 }) // 402 Payment Required
    }

    console.log('‚úÖ –ö—Ä–µ–¥–∏—Ç—ã –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ:', creditsCheck)

    // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–æ–º–ø—Ç —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π —è–∑—ã–∫–∞
    console.log(`–ó–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–æ–º–ø—Ç –¥–ª—è —è–∑—ã–∫–∞: ${language}`)
    const jsonPrompt = await loadJSONPrompt(language)
    console.log(`–ü—Ä–æ–º–ø—Ç –∑–∞–≥—Ä—É–∂–µ–Ω –¥–ª—è —è–∑—ã–∫–∞ ${language}, –¥–ª–∏–Ω–∞:`, jsonPrompt.length)

    console.log('üîç Context –ø–µ—Ä–µ–¥–∞–Ω:', {
      hasContext: !!context,
      contextLength: context?.length || 0,
      contextPreview: context?.substring(0, 200) || '–Ω–µ—Ç'
    })

    const finalPrompt = combineWithContext(jsonPrompt, context, language)
    console.log('–§–∏–Ω–∞–ª—å–Ω—ã–π –ø—Ä–æ–º–ø—Ç –≥–æ—Ç–æ–≤, –¥–ª–∏–Ω–∞:', finalPrompt.length)
    console.log('üîç –ü—Ä–µ–≤—å—é —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ –ø—Ä–æ–º–ø—Ç–∞ (–ø–µ—Ä–≤—ã–µ 500 —Å–∏–º–≤–æ–ª–æ–≤):', finalPrompt.substring(0, 500))

    let analysisResult: AIResponse | null = null

    if (url) {
      // –ê–Ω–∞–ª–∏–∑ URL
      console.log('–ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∞–ª–∏–∑ URL:', url)
      analysisResult = await executeAIRequest(
        [{ role: 'user', content: finalPrompt }],
        {
          provider: provider,
          openrouterModel: openrouterModel
        }
      )
    } else if (screenshot) {
      // –ê–Ω–∞–ª–∏–∑ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞
      console.log('–ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∞–ª–∏–∑ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞')
      analysisResult = await executeAIRequest(
        [{ 
          role: 'user', 
          content: [
            { type: 'text', text: finalPrompt },
            { type: 'image_url', image_url: { url: screenshot, detail: 'high' } }
          ]
        }],
        {
          provider: provider,
          openrouterModel: openrouterModel
        }
      )
    }

    if (!analysisResult) {
      console.log('–û—à–∏–±–∫–∞: –∞–Ω–∞–ª–∏–∑ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω')
      return NextResponse.json(
        { error: '–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∞–Ω–∞–ª–∏–∑' },
        { status: 500 }
      )
    }

    console.log('–ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω, —Ä–µ–∑—É–ª—å—Ç–∞—Ç:', Object.keys(analysisResult || {}))

    // –ü–∞—Ä—Å–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –µ—Å–ª–∏ –æ–Ω –≤ —Ñ–æ—Ä–º–∞—Ç–µ {content: "JSON_STRING"}
    let parsedResult = analysisResult
    if (analysisResult && typeof analysisResult === 'object' && 'content' in analysisResult) {
      try {
        console.log('–ü–∞—Ä—Å–∏–º content –∫–∞–∫ JSON...')
        parsedResult = JSON.parse((analysisResult as any).content)
        console.log('–†–µ–∑—É–ª—å—Ç–∞—Ç —Ä–∞—Å–ø–∞—Ä—Å–µ–Ω:', Object.keys(parsedResult || {}))
      } catch (parseError) {
        console.error('–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ content:', parseError)
        parsedResult = analysisResult
      }
    }

    // –í–∞–ª–∏–¥–∞—Ü–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
    let validation: any = { isValid: false, errors: [] }
    let surveyValidation: any = null
    let surveyAnalysis: any = null

    if (parsedResult && isStructuredResponse(parsedResult as any)) {
      console.log('–†–µ–∑—É–ª—å—Ç–∞—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π, –≤–∞–ª–∏–¥–∏—Ä—É–µ–º...')
      
      // –í–∞–ª–∏–¥–∞—Ü–∏—è –æ–ø—Ä–æ—Å–∞
      if ((parsedResult as any).uxSurvey) {
        surveyValidation = validateSurvey((parsedResult as any).uxSurvey)
        console.log('–í–∞–ª–∏–¥–∞—Ü–∏—è –æ–ø—Ä–æ—Å–∞:', surveyValidation)
      }

      // –ê–Ω–∞–ª–∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –æ–ø—Ä–æ—Å–∞
      if ((parsedResult as any).uxSurvey && surveyValidation?.isValid) {
        surveyAnalysis = analyzeSurveyResults((parsedResult as any).uxSurvey)
        console.log('–ê–Ω–∞–ª–∏–∑ –æ–ø—Ä–æ—Å–∞:', surveyAnalysis)
      }

      validation = { isValid: true, errors: [] }
    }

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ —Ç–∞–±–ª–∏—Ü—É audits
    if (auditId) {
      try {
        console.log('–°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ audits:', {
          auditId,
          result_data: parsedResult as any,
          status: 'completed'
        })
        
        const { error: auditUpdateError } = await supabase
          .from('audits')
          .update({
            result_data: parsedResult as any,
            status: 'completed',
            updated_at: new Date().toISOString()
          })
          .eq('id', auditId)
        
        if (auditUpdateError) {
          console.error('–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è audits:', auditUpdateError)
          throw new Error(`–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞: ${auditUpdateError.message}`)
        } else {
          console.log('‚úÖ –ê—É–¥–∏—Ç —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º')
        }
      } catch (saveError) {
        console.error('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞:', saveError)
        throw new Error(`–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∞—É–¥–∏—Ç–∞: ${saveError instanceof Error ? saveError.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}`)
      }
    } else {
      console.warn('‚ö†Ô∏è auditId –Ω–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω, —Ä–µ–∑—É–ª—å—Ç–∞—Ç –Ω–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω')
    }

    // –°–ø–∏—Å—ã–≤–∞–µ–º –∫—Ä–µ–¥–∏—Ç—ã –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∞—É–¥–∏—Ç–∞ –≤ –ë–î
    if (auditId) {
      console.log('üîí –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ —Å–ø–∏—Å–∞–Ω–∏–µ –∫—Ä–µ–¥–∏—Ç–æ–≤ –∑–∞ –∞—É–¥–∏—Ç:', auditId, '–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ:', requiredCredits)
      const deductResult = await safeDeductCreditsForAudit(
        user.id,
        'research',
        auditId,
        `UX Research audit: ${url || 'screenshot analysis'}`,
        requiredCredits
      )

      if (!deductResult.success) {
        console.error('‚ùå –û—à–∏–±–∫–∞ —Å–ø–∏—Å–∞–Ω–∏—è –∫—Ä–µ–¥–∏—Ç–æ–≤:', deductResult)
        // –í–ê–ñ–ù–û: –ï—Å–ª–∏ —Å–ø–∏—Å–∞–Ω–∏–µ –Ω–µ —É–¥–∞–ª–æ—Å—å, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—à–∏–±–∫—É
        // –ê—É–¥–∏—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω, –Ω–æ –∫—Ä–µ–¥–∏—Ç—ã –Ω–µ —Å–ø–∏—Å–∞–Ω—ã (—Ñ–ª–∞–≥ credits_deducted = false)
        return NextResponse.json(
          {
            error: 'Credits deduction failed',
            message: deductResult.message,
            audit_id: auditId,
            // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∞—É–¥–∏—Ç–∞, —á—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–≥ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –ø–æ–ø—ã—Ç–∫—É
            data: parsedResult as any
          },
          { status: 402 }
        )
      } else {
        console.log('‚úÖ –ö—Ä–µ–¥–∏—Ç—ã —É—Å–ø–µ—à–Ω–æ —Å–ø–∏—Å–∞–Ω—ã:', deductResult)
      }
    }

    console.log('–í–æ–∑–≤—Ä–∞—â–∞–µ–º —É—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç...')
    return NextResponse.json({ 
      success: true,
      data: parsedResult as any,
      format: 'json',
      validation: {
        survey: surveyValidation,
        analysis: surveyAnalysis
      },
      credits_info: {
        deducted: auditId ? true : false,
        is_test_account: creditsCheck.isTestAccount,
        required_credits: creditsCheck.requiredCredits,
        current_balance: creditsCheck.currentBalance
      }
    })

  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –≤ research-with-credits API:', error)
    return NextResponse.json(
      { error: '–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞' },
      { status: 500 }
    )
  }
}

