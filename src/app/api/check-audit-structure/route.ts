import { NextRequest, NextResponse } from 'next/server'
import { createClient } from '@supabase/supabase-js'

export const dynamic = 'force-dynamic'

export async function GET(request: NextRequest) {
  try {
    const supabaseClient = createClient(
      process.env.NEXT_PUBLIC_SUPABASE_URL!,
      process.env.SUPABASE_SERVICE_ROLE_KEY!
    )

    console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã audits...')

    // –ü–æ–ª—É—á–∞–µ–º –æ–¥–∏–Ω –∞—É–¥–∏—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–ª–µ–π
    const { data: audit, error: auditError } = await supabaseClient
      .from('audits')
      .select('*')
      .limit(1)
      .single()

    if (auditError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∞—É–¥–∏—Ç–∞:', auditError)
      return NextResponse.json({ 
        error: '–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∞—É–¥–∏—Ç–∞', 
        details: auditError.message 
      }, { status: 500 })
    }

    console.log('‚úÖ –ê—É–¥–∏—Ç –ø–æ–ª—É—á–µ–Ω, –ø—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—è...')
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø–æ–ª–µ–π
    const hasPublicEnabled = 'public_enabled' in audit
    const hasPublicToken = 'public_token' in audit
    
    console.log('üîç –†–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏:', {
      hasPublicEnabled,
      hasPublicToken,
      auditKeys: Object.keys(audit)
    })

    return NextResponse.json({
      success: true,
      hasPublicEnabled,
      hasPublicToken,
      auditKeys: Object.keys(audit),
      sampleAudit: {
        id: audit.id,
        name: audit.name,
        public_enabled: audit.public_enabled,
        public_token: audit.public_token,
        input_data_public_enabled: audit.input_data?.public_enabled,
        input_data_public_token: audit.input_data?.public_token
      }
    })

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –≤ API check-audit-structure:', error)
    return NextResponse.json({
      error: 'Internal server error',
      details: error instanceof Error ? error.message : 'Unknown error'
    }, { status: 500 })
  }
}
